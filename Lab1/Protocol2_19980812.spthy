theory Protocol2
begin

/* ----------------- */
/* Equational theory */
/* ----------------- */

/* Load the built-in encryption theories */
//Do not change the following line, i.e. do not add, change or remove anything (not even comments) in the following line.
builtins: symmetric-encryption, asymmetric-encryption

/* ---------------- */
/* Public Key Setup */
/* ---------------- */

/* The following rule should be annotated by the following action facts: 
- PubKey($A, ~ska)
*/
rule PubKey:  
  [ Fr(~ska) ]
--[ PubKey($A, ~ska) ]->
  [ !Ltk($A, ~ska), 
    !Pk($A, pk(~ska)), 
    Out(pk(~ska)) ]

/* -------------- */
/* Protocol rules */
/* -------------- */
/* The following rule should be annotated by the following action facts: 
- AliceSends($A, $B, ~ma, ~kAB, pkB)
*/
rule AliceSends:
  [ !Pk($B, pkB), 
    Fr(~kAB), 
    Fr(~ma) ]
--[ AliceSends($A, $B, ~ma, ~kAB, pkB),
    RunningA($A, $B, ~ma) ]->
  [ Out(<$A, aenc(~kAB, pkB), senc(~ma, ~kAB)>), 
    AliceSends($A, $B, ~ma, ~kAB, pkB) ]

/* The following rule should be annotated by the following action facts: 
- BobReceived($B, $A, ~mb, ma, kAB, ~skb)
*/
rule BobReceivesAndSends:
  [ In(<aenc(kAB, pk(~skb)), senc(ma, kAB)>),
    !Ltk($B, ~skb), 
    Fr(~mb) ]
--[ BobReceived($B, $A, ~mb, ma, kAB, ~skb),
    FinishedB($B, $A, ma, ~mb),
    SecretB(~mb),
    RunningB($B, $A, ~mb),
    CommitB($B, $A, ma) ]->
  [ Out(senc(~mb, kAB)) ]

/* The following rule should be annotated by the following action facts: 
- AliceReceives($A, $B, ~ma, mb, ~kAB)
*/
rule AliceReceives:
  [ In(senc(mb, ~kAB)),
    AliceSends($A, $B, ~ma, ~kAB, pkB) ]
--[ AliceReceives($A, $B, ~ma, mb, ~kAB),
    FinishedA($A, $B, ~ma, mb),
    CommitA($A, $B, mb),
    SecretA(~ma) ]->
  [ ]


/* ---------- */
/* Properties */
/* ---------- */

/* Executability check: */
//Make sure to add the action facts referred to by this lemma in your model
//Do not change this lemma, i.e. do not add, change or remove anything (not even comments) in the following three lines.
lemma executable:
exists-trace "Ex #i #j A B ma mb.
FinishedA(A, B, ma, mb)@i & FinishedB(B,A,ma,mb)@j& not (A=B)"
 
//un-comment following line for Task 1.3
lemma secrecyA:
all-traces 
"All m #i. SecretA(m)@i ==> not (Ex #j. K(m)@j)"
/*FILL IN HERE: 
You may only use the action facts SecretA, SecretB, and K to formulate this lemma.*/

//un-comment following line for Task 1.3
lemma secrecyB:
all-traces
"All m #i. SecretB(m)@i ==> not (Ex #j. K(m)@j)"
/*FILL IN HERE: 
You may only use the action facts SecretA, SecretB, and K to formulate this lemma.*/

//un-comment following line for Task 1.4
lemma non_injectiveA:
all-traces
"All A B m #i. CommitA(A, B, m)@i ==> (Ex #j. RunningB(B, A, m)@j)"
/*FILL IN HERE: 
You may only use the action facts CommitA, CommitB, RunningA, and RunningB to formulate this lemma.*/

//un-comment following line for Task 1.4
lemma non_injectiveB:
all-traces
"All A B m #i. CommitB(B, A, m)@i ==> (Ex #j. RunningA(A, B, m)@j)"
/*FILL IN HERE: 
You may only use the action facts CommitA, CommitB, RunningA, and RunningB to formulate this lemma.*/



end
