theory Protocol1
begin


/* ----------------- */
/* Equational theory */
/* ----------------- */

/* Load the built-in symmetrical encryption theory */
//Do not change the following line, i.e. do not add, change or remove anything (not even comments) in the following line.
builtins: symmetric-encryption

/* -------------- */
/* Share Key Setup */
/* -------------- */

/* The following rule should be annotated by the following action facts: 
- ShareKey($A, $B, ~kAB)
*/
rule ShareKey:  // share a key pair between two parties.
  [ Fr(~kAB) ]
--[ ShareKey($A, $B, ~kAB) ]->
  [ !Key($A, $B, ~kAB) ]


/* -------------- */
/* Protocol rules */
/* -------------- */

/* The following rule should be annotated by the following action facts: 
- AliceSends($A, $B, kAB, ~ma)
*/
rule AliceSends:
  [ Fr(~ma), 
    !Key($A, $B, kAB) ]
--[ AliceSends($A, $B, kAB, ~ma),
    RunningA($A, $B, ~ma) ]->
  [ Out(senc(~ma, kAB)), 
    AliceSends($A, $B, kAB, ~ma) ]


/* The following rule should be annotated by the following action facts: 
- BobReceivesAndSends($B, $A, kAB, ~mb, ma)
*/
rule BobReceivesAndSends:
  [ In(senc(ma, kAB)), 
    Fr(~mb), 
    !Key($A, $B, kAB) ]
--[ BobReceivesAndSends($B, $A, kAB, ~mb, ma), 
    FinishedB($A, $B, ma, ~mb),
    SecretB(~mb),
    RunningB($B, $A, ~mb),
    CommitB($B, $A, ma) ]->
  [ Out(senc(~mb, kAB)), 
    BobReceivesAndSends($B, $A, kAB, ~mb, ma) ]

/* The following rule should be annotated by the following action facts: 
- AliceReceives($A, $B, kAB, ~ma, mb)
*/
rule AliceReceives:
  [ In(senc(mb, kAB)), 
    AliceSends($A, $B, kAB, ~ma) ]
--[ AliceReceives($A, $B, kAB, ~ma, mb), 
    FinishedA($B, $A, ~ma, mb),
    CommitA($A, $B, mb),
    SecretA(~ma) ]->
  [ ]


/* ---------- */
/* Properties */
/* ---------- */


/* Executability check: */
//Make sure to add the action facts referred to by this lemma in your model
//Do not change this lemma, i.e. do not add, change or remove anything (not even comments) in the following three lines.
lemma executable:
exists-trace "Ex #i #j A B ma mb.
FinishedA(A, B, ma, mb)@i & FinishedB(B,A,ma,mb)@j & not (A=B)"
 
//un-comment following line for Task 1.3
lemma secrecyA:
all-traces
"All m #i. SecretA(m)@i ==> not (Ex #j. K(m)@j)"
//You may only use the action facts SecretA, SecretB, and K to formulate this lemma.*/

//un-comment following line for Task 1.3
lemma secrecyB:
all-traces
"All m #i. SecretB(m)@i ==> not (Ex #j. K(m)@j)"
/*FILL IN HERE: 
You may only use the action facts SecretA, SecretB, and K to formulate this lemma.*/

//un-comment following line for Task 1.4
lemma non_injectiveA:
all-traces
"All A B m #i. CommitA(A, B, m)@i ==> (Ex #j. RunningB(B, A, m)@j)"
/*FILL IN HERE: 
You may only use the action facts CommitA, CommitB, RunningA, and RunningB to formulate this lemma.*/

//un-comment following line for Task 1.4
lemma non_injectiveB:
all-traces
"All A B m #i. CommitB(B, A, m)@i ==> (Ex #j. RunningA(A, B, m)@j)"
/*FILL IN HERE: 
You may only use the action facts CommitA, CommitB, RunningA, and RunningB to formulate this lemma.*/



end



